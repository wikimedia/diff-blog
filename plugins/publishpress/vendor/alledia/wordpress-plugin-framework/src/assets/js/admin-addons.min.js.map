{"version":3,"sources":["../jsx/admin-addons.jsx"],"names":[],"mappings":"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","file":"admin-addons.min.js","sourcesContent":["/**\n * Addons tabs class.\n *\n */\nclass AllexAddonsTabs extends React.Component {\n    /**\n     * Constructor.\n     *\n     * @param props\n     */\n    constructor (props) {\n        super(props);\n\n        // State\n        this.state = {\n            currentTab: this.props.currentTab\n        };\n\n        // Events\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    /**\n     * Handles the click event on tabs.\n     *\n     * @param e\n     */\n    handleClick (e) {\n        e.preventDefault();\n\n        this.setState({currentTab: e.target.dataset.tab});\n        this.props.parentTabClickHandler(e.target.dataset.tab);\n    }\n\n    /**\n     * Renders the element.\n     *\n     * @returns {*}\n     */\n    render () {\n\n        return (\n            <div className=\"nav-tab-wrapper\">\n                {this.props.addonsCount > 0 ? (\n                    <div>\n                        <a href=\"#\"\n                           className={this.state.currentTab == 'installed' ? 'nav-tab nav-tab-active' : 'nav-tab'}\n                           data-tab=\"installed\"\n                           onClick={this.handleClick}>\n\n                            {allexContext.labels.installed}\n                        </a>\n\n                        <a href=\"#\"\n                           className={this.state.currentTab == 'missed' ? 'nav-tab nav-tab-active' : 'nav-tab'}\n                           data-tab=\"missed\"\n                           onClick={this.handleClick}>\n\n                            {allexContext.labels.browse_more}\n                        </a>\n                    </div>\n                ) : (null)}\n            </div>\n        );\n    }\n}\n\n/**\n * Table of addons.\n *\n * @param {Array} addons\n * @param {String} currentTab\n * @param {String} nonce\n * @param {String} pluginName\n * @param {Int} addonsCount\n * @param {Int} addonsCountTotal\n */\nclass AllexAddonsTable extends React.Component {\n    /**\n     * The constructor.\n     *\n     * @param props\n     */\n    constructor (props) {\n        super(props);\n    }\n\n    /**\n     * Renders the element.\n     *\n     * @returns {*}\n     */\n    render () {\n        const rows = this.props.addons.map((addon, index) => {\n            // Check if the current addon belongs to the current tab, based on the state.\n            if (\n                (addon.isInstalled && this.props.currentTab === 'installed')\n                || (!addon.isInstalled && this.props.currentTab === 'missed')\n            ) {\n                return (<AllexAddonsRow key={'allex_addon_' + addon.slug} addon={addon}\n                                        currentTab={this.props.currentTab} nonce={this.props.nonce}\n                                        pluginName={this.props.pluginName}/>);\n            } else {\n                return null;\n            }\n        });\n\n        return (\n            <section id={'allex-addons-' + this.props.currentTab} className=\"allex-addons-container\">\n                {this.props.addonsCount == this.props.addonsCountTotal ? (\n                    <p className=\"notice allex-addons-all-installed\">{allexContext.labels.all_plugins_installed}</p>\n                ) : (null)}\n\n                {rows}\n            </section>\n        );\n    }\n}\n\n/**\n * Addons row class.\n *\n * @param {Int} index\n * @param {Object} addon\n * @param {String} currentTab\n * @param {String} nonce\n * @param {String} pluginName\n */\nclass AllexAddonsRow extends React.Component {\n    /**\n     * The constructor.\n     *\n     * @param props\n     */\n    constructor (props) {\n        super(props);\n\n        // State\n        this.state = {\n            licenseKey: this.props.addon.licenseKey,\n            licenseStatus: this.props.addon.licenseStatus,\n            messages: [],\n            showForm: this.props.addon.licenseKey === '',\n            processing: false\n        };\n\n        // Events\n        this.onChangeLicenseKey = this.onChangeLicenseKey.bind(this);\n        this.localizeLicenseStatus = this.localizeLicenseStatus.bind(this);\n        this.showForm = this.showForm.bind(this);\n        this.hideForm = this.hideForm.bind(this);\n        this.activateLicenseKey = this.activateLicenseKey.bind(this);\n        this.addMessage = this.addMessage.bind(this);\n        this.focusInput = this.focusInput.bind(this);\n    }\n\n    /**\n     *\n     * @param status\n     *\n     * @returns {String}\n     */\n    localizeLicenseStatus (status) {\n        if (status !== null && status !== '' && typeof status === 'string') {\n            if (allexContext.labels['license_status_' + status]) {\n                return allexContext.labels['license_status_' + status];\n            }\n\n            return status;\n        }\n\n        return '';\n    }\n\n    /**\n     * Show the license key form\n     */\n    showForm () {\n        this.setState({\n            showForm: true,\n            messages: []\n        });\n    }\n\n    /**\n     * Hide the license key form\n     */\n    hideForm () {\n        this.setState({\n            showForm: false,\n            messages: []\n        });\n    }\n\n    /**\n     * Add a message to the state.\n     *\n     * @param messageText\n     */\n    addMessage (messageText) {\n        let messages = this.state.messages;\n\n        messages.push(messageText);\n\n        this.setState({messages: messages});\n    }\n\n    /**\n     * Set focus on the input.\n     */\n    focusInput () {\n        jQuery('article[data-slug=\"' + this.props.addon.slug + '\"] input').focus().select();\n    }\n\n    /**\n     * Make a request to the system to activate the license key.\n     */\n    activateLicenseKey () {\n        let component = this;\n\n        jQuery.ajax({\n            type: 'POST',\n            url: ajaxurl,\n            data: {\n                action: 'allex_addon_license_validate',\n                key: this.state.licenseKey,\n                plugin_name: this.props.pluginName,\n                addon_name: this.props.addon.slug,\n                addon_edd_id: this.props.addon.eddId,\n                nonce: this.props.nonce\n            },\n            beforeSend: function (jqXHR, settings) {\n                component.setState({processing: true, messages: []});\n            },\n            success: function (response, textStatus, jqXHR) {\n                component.setState({\n                    processing: false,\n                    licenseStatus: response.license_status\n                });\n\n                // Error.\n                if (!response.success) {\n                    component.focusInput();\n                    component.addMessage(response.message);\n\n                    return;\n                }\n\n                // Invalid licenses.\n                if (response.license_status !== 'valid') {\n                    component.focusInput();\n                    component.addMessage(component.localizeLicenseStatus(response.license_status));\n\n                    return;\n                }\n\n                // Valid licenses.\n                if (response.license_status === 'valid') {\n                    component.setState({showForm: false});\n\n                    return;\n                }\n            },\n            error: function (jqXHR, textStatus, errorThrown) {\n                component.setState({processing: false});\n\n                // Error.\n                component.addMessage(textStatus + '. ' + allexContext.labels.contact_support);\n            }\n        });\n    }\n\n    /**\n     * Event triggered when a license key is added in the input field.\n     *\n     * @param e\n     */\n    onChangeLicenseKey (e) {\n        this.setState({\n            licenseKey: e.target.value,\n            licenseStatus: 'inactive'\n        });\n    }\n\n    /**\n     * Renders the element.\n     *\n     * @returns {*}\n     */\n    render () {\n        let messages = this.state.messages.map((message, index) => {\n            let key = this.props.addon.slug + '_' + index;\n\n            return (<li key={key}>{message}</li>);\n        });\n\n        let showForm = this.state.showForm && this.props.currentTab === 'installed';\n        let showKey = this.props.currentTab === 'installed';\n\n        let form = <div className=\"allex-addon-license-form\">\n            <div>\n                <label>{allexContext.labels.license_key}</label>\n\n                <input\n                    type=\"text\"\n                    size=\"40\"\n                    maxLength=\"32\"\n                    autoComplete=\"false\"\n                    placeholder={allexContext.labels.enter_license_key}\n                    value={this.state.licenseKey}\n                    onChange={this.onChangeLicenseKey}\n                    disabled={this.state.processing ? 'disabled' : ''}/>\n\n                <button\n                    type=\"button\"\n                    className=\"button activate\"\n                    onClick={this.activateLicenseKey}\n                    disabled={this.state.processing ? 'disabled' : ''}>\n\n                    {this.state.processing ? allexContext.labels.please_wait : allexContext.labels.activate}\n                </button>\n\n                {this.state.processing ? (\n                    <div className=\"lds-dual-ring\"></div>\n                ) : (\n                    <i className=\"dashicons dashicons-no-alt\"\n                       onClick={this.hideForm}></i>\n                )}\n            </div>\n\n            {this.state.processing === false ? (\n                <ul className=\"allex-addon-messages\">\n                    {messages}\n                </ul>\n            ) : (null)}\n        </div>;\n\n        return (\n            <article data-slug={this.props.addon.slug}>\n                <i className={this.props.addon.iconClass}></i>\n\n                <header>\n                    <h3>{this.props.addon.title}</h3>\n                    <p>{this.props.addon.description}</p>\n                </header>\n\n                {showForm ? (form) : (null)}\n\n                {this.props.currentTab === 'installed' && !showForm ? (\n                    <div className=\"allex-addon-license\">\n                        <label>{allexContext.labels.license_key}</label>\n                        <code>{this.state.licenseKey}</code>\n                        &nbsp;\n                        <a href=\"#\"\n                           onClick={this.showForm}>{allexContext.labels.change}</a>\n\n\n                        <div className=\"allex-addon-license-status\">\n                            {this.localizeLicenseStatus(this.state.licenseStatus)}\n                        </div>\n                    </div>\n                ) : (null)}\n            </article>\n        );\n    }\n}\n\n/**\n * Addons container class.\n *\n * @param {String} pluginName\n * @param {Int} addonsCount\n * @param {Int} addonsCountTotal\n * @param {String} browseMoreUrl\n * @param {Array} addons\n * @param {String} nonce\n *\n */\nclass AllexAddonsContainer extends React.Component {\n    /**\n     * Constructor.\n     *\n     * @param props\n     */\n    constructor (props) {\n        super(props);\n\n        // State\n        this.state = {\n            currentTab: this.props.addonsCount > 0 ? 'installed' : 'missed'\n        };\n\n        // Events\n        this.handleTabClick = this.handleTabClick.bind(this);\n    }\n\n    /**\n     * Event called by the child tabs' click event.\n     *\n     * @param currentTab\n     */\n    handleTabClick (currentTab) {\n        this.setState({currentTab: currentTab});\n    }\n\n    /**\n     * Renders the element.\n     *\n     * @returns {*}\n     */\n    render () {\n        return (\n            <div id=\"allex-addons-table\" className={this.props.pluginName}>\n                <AllexAddonsTabs\n                    addonsCount={this.props.addonsCount}\n                    addonsCountTotal={this.props.addonsCountTotal}\n                    currentTab={this.state.currentTab}\n                    parentTabClickHandler={this.handleTabClick}>\n                </AllexAddonsTabs>\n\n                {this.state.currentTab == 'missed' ? (\n                    <div className=\"allex-addons-table-header\">\n                        <a href={this.props.browseMoreUrl} className=\"button button-primary\" target=\"_blank\">\n                            {allexContext.labels.get_plugins}\n                        </a>\n                    </div>\n                ) : (null)}\n\n                <AllexAddonsTable addons={this.props.addons} currentTab={this.state.currentTab} nonce={this.props.nonce}\n                                  pluginName={this.props.pluginName} addonsCount={this.props.addonsCount}\n                                  addonsCountTotal={this.props.addonsCountTotal}/>\n            </div>\n        );\n    }\n}\n"]}